
public class LongestCommonSubstring {
	
	public static void main(String[] args) {
		String S1 = "ABCDGH", S2 = "ACDGHR";
		
		int res = longestCommonSubstr(S1, S2, S1.length(), S2.length());
		System.out.println("res: "+res);
	}
	
	static int currLength, maxLength;
	static int T[][];
	static int LIM = 1001;
	
	static int longestCommonSubstr(String S1, String S2, int n, int m) {
		maxLength = Integer.MIN_VALUE;
		
		T = new int[LIM][LIM];
		
		return lcs(S1, S2, S1.length()-1, S2.length()-1);
		
    }
	
	static int lcs(String S1, String S2, int n, int m) {
		
		for(int i=1; i<=n; i++) {
			for(int j=1; j<=m; j++) {
				
				if(S1.charAt(i-1)==S2.charAt(j-1)) {
					T[i][j] = T[i-1][j-1] + 1;
					if(T[i][j]>maxLength) maxLength = T[i][j];
				}
				
			}
		}
		
		return maxLength;
    }
}
