import java.util.Arrays;

public class MergeWithoutExtraSpace {

	public static void main(String[] args) {
		// TODO Auto-generated method stub

		shell_merge(new long[] {1, 5, 9, 10, 15, 20}, new long[] {2, 3, 8, 13}, 6, 4);
		
		
	}
	
	public static void merge(long arr1[], long arr2[], int n, int m) 
    {
       
		int i=0, j=0;
		
		while(i<n) {
			
			if(arr1[i] < arr2[j]) {
				i++;
			} else {
				
				// swap
				long temp = arr1[i];
				arr1[i] = arr2[j];
				arr2[j] = temp;
				
				// place in right place at A2
				for(int k=0; k<m-1; k++) {
					if(arr2[k]>arr2[k+1]) {
						long temp2 = arr2[k];
						arr2[k] = arr2[k+1];
						arr2[k+1] = temp2;
					}
				}
				
				i++;
			}
			
		}
		System.out.println("A1: "+Arrays.toString(arr1));
		System.out.println("A2: "+Arrays.toString(arr2));

    }
	
	
	public static void shell_merge(long arr1[], long arr2[], int n, int m) {
		
		int gap = (int) Math.ceil((n+m)/2);
		
		while(gap!=0) {
			
			for(int i=0; i<(n+m)-gap; i++) {
//				int st = (i<n)? i : i-n;
//				int j = (st+gap<n)? st+gap : n-(st+gap);
				
				int j = i+gap;
				
				// case 1- i and j both in arr1
				if(i<n && j<n) {
					if(arr1[i]>arr1[j]) {
						swap(arr1,i,j);
						
//						int k = i;
//						while(k-gap>=0 && arr1[k-gap]>arr1[k]) {
//							swap(arr1,k,k-gap);
//							k = k-gap;
//						}
					}
				}
				
				// case 2- i in arr1 and j in arr 2
				else if(i<n && j>=n) {
					
					j = n-j;
					
					if(arr1[i]>arr2[j]) {
						long temp = arr1[i];
						arr1[i] = arr2[j];
						arr2[j] = temp;
						
//						int k = i;
//						while(k-gap>=0 && arr1[k-gap]>arr1[k]) {
//							swap(arr1,k,k-gap);
//							k = k-gap;
//						}
						
					}
				}
				
				// case 3- both i and j in arr2
				else if(i>=n && j>=n) {
					
					int st = n-i;
					j = n-j;
					
					if(arr2[st]>arr2[j]) {
						swap(arr2, j, st);
						
						//int k = st;
					}
					
				}
				
			}	
			
			gap = (int)Math.ceil(gap/2);
			
			
		}
		System.out.println("A1: "+Arrays.toString(arr1));
		System.out.println("A2: "+Arrays.toString(arr2));
		
	}
	
	private static void swap(long[] arr, int pos1, int pos2) {
		long temp = arr[pos1];
		arr[pos1] = arr[pos2];
		arr[pos2] = temp;
	}

}
